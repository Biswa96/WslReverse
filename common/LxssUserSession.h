/*** Autogenerated by WIDL 7.7 from LxssUserSession.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __lxssusersession_h__
#define __lxssusersession_h__

/* Forward declarations */

#ifndef __ILxssUserSession1_FWD_DEFINED__
#define __ILxssUserSession1_FWD_DEFINED__
typedef interface ILxssUserSession1 ILxssUserSession1;
#ifdef __cplusplus
interface ILxssUserSession1;
#endif /* __cplusplus */
#endif

#ifndef __ILxssUserSession2_FWD_DEFINED__
#define __ILxssUserSession2_FWD_DEFINED__
typedef interface ILxssUserSession2 ILxssUserSession2;
#ifdef __cplusplus
interface ILxssUserSession2;
#endif /* __cplusplus */
#endif

#ifndef __ILxssUserSession3_FWD_DEFINED__
#define __ILxssUserSession3_FWD_DEFINED__
typedef interface ILxssUserSession3 ILxssUserSession3;
#ifdef __cplusplus
interface ILxssUserSession3;
#endif /* __cplusplus */
#endif

#ifndef __LxssUserSession_FWD_DEFINED__
#define __LxssUserSession_FWD_DEFINED__
#ifdef __cplusplus
typedef class LxssUserSession LxssUserSession;
#else
typedef struct LxssUserSession LxssUserSession;
#endif /* defined __cplusplus */
#endif /* defined __LxssUserSession_FWD_DEFINED__ */

/* Headers for imported files */

#include <unknwn.h>

#ifdef __cplusplus
extern "C" {
#endif

#if 0
typedef UINT_PTR SOCKET;
#endif
typedef enum _LXSS_DISTRIBUTION_STATES {
    Stopped = 1,
    Running = 2,
    Installing = 3,
    Uninstalling = 4,
    Converting = 5
} LXSS_DISTRIBUTION_STATES;
typedef enum _LXSS_INSTANCE_FLAGS {
    LXSS_INSTANCE_ENSURE_CASE_SENSITIVITY = 1,
    LXSS_INSTANCE_USE_EXISTING_INSTANCE = 2
} LXSS_INSTANCE_FLAGS;
typedef struct _LXSS_ENUMERATE_INFO {
    GUID DistributionID;
    LXSS_DISTRIBUTION_STATES State;
    ULONG Version;
    ULONG Default;
} LXSS_ENUMERATE_INFO;
typedef struct _LXSS_ENUMERATE_INFO *PLXSS_ENUMERATE_INFO;
typedef enum _WSL_DISTRIBUTION_FLAGS {
    WSL_DISTRIBUTION_FLAGS_NONE = 0,
    WSL_DISTRIBUTION_FLAGS_ENABLE_INTEROP = 1,
    WSL_DISTRIBUTION_FLAGS_APPEND_NT_PATH = 2,
    WSL_DISTRIBUTION_FLAGS_ENABLE_DRIVE_MOUNTING = 4,
    WSL_DISTRIBUTION_FLAGS_DEFAULT = 7,
    WSL_DISTRIBUTION_FLAGS_WSL2 = 8
} WSL_DISTRIBUTION_FLAGS;
typedef struct _LXSS_STD_HANDLE {
    ULONG Handle;
    ULONG Pipe;
} LXSS_STD_HANDLE;
typedef struct _LXSS_STD_HANDLE *PLXSS_STD_HANDLE;
typedef struct _LXSS_STD_HANDLES {
    LXSS_STD_HANDLE StdIn;
    LXSS_STD_HANDLE StdOut;
    LXSS_STD_HANDLE StdErr;
} LXSS_STD_HANDLES;
typedef struct _LXSS_STD_HANDLES *PLXSS_STD_HANDLES;
/*****************************************************************************
 * ILxssUserSession1 interface
 */
#ifndef __ILxssUserSession1_INTERFACE_DEFINED__
#define __ILxssUserSession1_INTERFACE_DEFINED__

DEFINE_GUID(IID_ILxssUserSession1, 0x536a6bcf, 0xfe04, 0x41d9, 0xb9,0x78, 0xdc,0xac,0xa9,0xa9,0xb5,0xb9);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("536a6bcf-fe04-41d9-b978-dcaca9a9b5b9")
ILxssUserSession1 : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
        REFGUID DistroId,
        LXSS_INSTANCE_FLAGS InstanceFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterDistribution(
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterDistributionPipe(
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDistributionId(
        LPCWSTR DistroName,
        ULONG EnableEnumerate,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE TerminateDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE UnregisterDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE ConfigureDistribution(
        REFGUID DistroId,
        LPCSTR KernelCommandLine,
        ULONG DefaultUid,
        ULONG EnvironmentCount,
        LPCSTR *DefaultEnvironment,
        ULONG Flags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDistributionConfiguration(
        REFGUID DistroId,
        LPWSTR *DistributionName,
        ULONG *Version,
        LPWSTR *BasePath,
        LPSTR *KernelCommandLine,
        ULONG *DefaultUid,
        ULONG *EnvironmentCount,
        LPSTR **DefaultEnvironment,
        ULONG *Flags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDefaultDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetDefaultDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE EnumerateDistributions(
        BOOLEAN Flags,
        ULONG *DistroCount,
        GUID **DistroIdList) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateLxProcess(
        REFGUID DistroId,
        LPSTR CommandLine,
        ULONG ArgumentCount,
        LPSTR *Arguments,
        LPWSTR CurrentDirectory,
        LPWSTR SharedEnvironment,
        LPWSTR ProcessEnvironment,
        SIZE_T EnvironmentLength,
        LPWSTR LinuxUserName,
        USHORT WindowWidthX,
        USHORT WindowHeightY,
        ULONG ConsoleHandle,
        PLXSS_STD_HANDLES StdHandles,
        REFGUID InitiatedDistroId,
        REFGUID LxInstanceId,
        HANDLE *LxProcessHandle,
        HANDLE *ServerHandle,
        PVOID InputSocket,
        PVOID OutputSocket,
        PVOID ErrorSocket,
        PVOID ServerSocket) = 0;

    virtual HRESULT STDMETHODCALLTYPE BeginUpgradeDistribution(
        REFGUID DistroId,
        ULONG *Version,
        LPWSTR *BasePath) = 0;

    virtual HRESULT STDMETHODCALLTYPE FinishUpgradeDistribution(
        REFGUID DistroId,
        ULONG Version) = 0;

    virtual HRESULT STDMETHODCALLTYPE DisableVmMode(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE EnableVmMode(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterLxBusServer(
        REFGUID DistroId,
        LPSTR LxBusServerName,
        HANDLE *ServerHandle) = 0;

    virtual HRESULT STDMETHODCALLTYPE ExportDistribution(
        REFGUID DistroId,
        HANDLE FileHandle) = 0;

    virtual HRESULT STDMETHODCALLTYPE ExportDistributionPipe(
        REFGUID DistroId,
        HANDLE FileHandle) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ILxssUserSession1, 0x536a6bcf, 0xfe04, 0x41d9, 0xb9,0x78, 0xdc,0xac,0xa9,0xa9,0xb5,0xb9)
#endif
#else
typedef struct ILxssUserSession1Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ILxssUserSession1 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ILxssUserSession1 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ILxssUserSession1 *This);

    /*** ILxssUserSession1 methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateInstance)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        LXSS_INSTANCE_FLAGS InstanceFlags);

    HRESULT (STDMETHODCALLTYPE *RegisterDistribution)(
        ILxssUserSession1 *This,
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *RegisterDistributionPipe)(
        ILxssUserSession1 *This,
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *GetDistributionId)(
        ILxssUserSession1 *This,
        LPCWSTR DistroName,
        ULONG EnableEnumerate,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *TerminateDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *UnregisterDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *ConfigureDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        LPCSTR KernelCommandLine,
        ULONG DefaultUid,
        ULONG EnvironmentCount,
        LPCSTR *DefaultEnvironment,
        ULONG Flags);

    HRESULT (STDMETHODCALLTYPE *GetDistributionConfiguration)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        LPWSTR *DistributionName,
        ULONG *Version,
        LPWSTR *BasePath,
        LPSTR *KernelCommandLine,
        ULONG *DefaultUid,
        ULONG *EnvironmentCount,
        LPSTR **DefaultEnvironment,
        ULONG *Flags);

    HRESULT (STDMETHODCALLTYPE *GetDefaultDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *SetDefaultDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *EnumerateDistributions)(
        ILxssUserSession1 *This,
        BOOLEAN Flags,
        ULONG *DistroCount,
        GUID **DistroIdList);

    HRESULT (STDMETHODCALLTYPE *CreateLxProcess)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        LPSTR CommandLine,
        ULONG ArgumentCount,
        LPSTR *Arguments,
        LPWSTR CurrentDirectory,
        LPWSTR SharedEnvironment,
        LPWSTR ProcessEnvironment,
        SIZE_T EnvironmentLength,
        LPWSTR LinuxUserName,
        USHORT WindowWidthX,
        USHORT WindowHeightY,
        ULONG ConsoleHandle,
        PLXSS_STD_HANDLES StdHandles,
        REFGUID InitiatedDistroId,
        REFGUID LxInstanceId,
        HANDLE *LxProcessHandle,
        HANDLE *ServerHandle,
        PVOID InputSocket,
        PVOID OutputSocket,
        PVOID ErrorSocket,
        PVOID ServerSocket);

    HRESULT (STDMETHODCALLTYPE *BeginUpgradeDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        ULONG *Version,
        LPWSTR *BasePath);

    HRESULT (STDMETHODCALLTYPE *FinishUpgradeDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        ULONG Version);

    HRESULT (STDMETHODCALLTYPE *DisableVmMode)(
        ILxssUserSession1 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *EnableVmMode)(
        ILxssUserSession1 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *RegisterLxBusServer)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        LPSTR LxBusServerName,
        HANDLE *ServerHandle);

    HRESULT (STDMETHODCALLTYPE *ExportDistribution)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        HANDLE FileHandle);

    HRESULT (STDMETHODCALLTYPE *ExportDistributionPipe)(
        ILxssUserSession1 *This,
        REFGUID DistroId,
        HANDLE FileHandle);

    END_INTERFACE
} ILxssUserSession1Vtbl;

interface ILxssUserSession1 {
    CONST_VTBL ILxssUserSession1Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ILxssUserSession1_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ILxssUserSession1_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ILxssUserSession1_Release(This) (This)->lpVtbl->Release(This)
/*** ILxssUserSession1 methods ***/
#define ILxssUserSession1_CreateInstance(This,DistroId,InstanceFlags) (This)->lpVtbl->CreateInstance(This,DistroId,InstanceFlags)
#define ILxssUserSession1_RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId) (This)->lpVtbl->RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId)
#define ILxssUserSession1_RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId) (This)->lpVtbl->RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId)
#define ILxssUserSession1_GetDistributionId(This,DistroName,EnableEnumerate,DistroId) (This)->lpVtbl->GetDistributionId(This,DistroName,EnableEnumerate,DistroId)
#define ILxssUserSession1_TerminateDistribution(This,DistroId) (This)->lpVtbl->TerminateDistribution(This,DistroId)
#define ILxssUserSession1_UnregisterDistribution(This,DistroId) (This)->lpVtbl->UnregisterDistribution(This,DistroId)
#define ILxssUserSession1_ConfigureDistribution(This,DistroId,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags) (This)->lpVtbl->ConfigureDistribution(This,DistroId,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags)
#define ILxssUserSession1_GetDistributionConfiguration(This,DistroId,DistributionName,Version,BasePath,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags) (This)->lpVtbl->GetDistributionConfiguration(This,DistroId,DistributionName,Version,BasePath,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags)
#define ILxssUserSession1_GetDefaultDistribution(This,DistroId) (This)->lpVtbl->GetDefaultDistribution(This,DistroId)
#define ILxssUserSession1_SetDefaultDistribution(This,DistroId) (This)->lpVtbl->SetDefaultDistribution(This,DistroId)
#define ILxssUserSession1_EnumerateDistributions(This,Flags,DistroCount,DistroIdList) (This)->lpVtbl->EnumerateDistributions(This,Flags,DistroCount,DistroIdList)
#define ILxssUserSession1_CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket) (This)->lpVtbl->CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket)
#define ILxssUserSession1_BeginUpgradeDistribution(This,DistroId,Version,BasePath) (This)->lpVtbl->BeginUpgradeDistribution(This,DistroId,Version,BasePath)
#define ILxssUserSession1_FinishUpgradeDistribution(This,DistroId,Version) (This)->lpVtbl->FinishUpgradeDistribution(This,DistroId,Version)
#define ILxssUserSession1_DisableVmMode(This,DistroId) (This)->lpVtbl->DisableVmMode(This,DistroId)
#define ILxssUserSession1_EnableVmMode(This,DistroId) (This)->lpVtbl->EnableVmMode(This,DistroId)
#define ILxssUserSession1_RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle) (This)->lpVtbl->RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle)
#define ILxssUserSession1_ExportDistribution(This,DistroId,FileHandle) (This)->lpVtbl->ExportDistribution(This,DistroId,FileHandle)
#define ILxssUserSession1_ExportDistributionPipe(This,DistroId,FileHandle) (This)->lpVtbl->ExportDistributionPipe(This,DistroId,FileHandle)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ILxssUserSession1_QueryInterface(ILxssUserSession1* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ILxssUserSession1_AddRef(ILxssUserSession1* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ILxssUserSession1_Release(ILxssUserSession1* This) {
    return This->lpVtbl->Release(This);
}
/*** ILxssUserSession1 methods ***/
static FORCEINLINE HRESULT ILxssUserSession1_CreateInstance(ILxssUserSession1* This,REFGUID DistroId,LXSS_INSTANCE_FLAGS InstanceFlags) {
    return This->lpVtbl->CreateInstance(This,DistroId,InstanceFlags);
}
static FORCEINLINE HRESULT ILxssUserSession1_RegisterDistribution(ILxssUserSession1* This,LPWSTR DistributionName,ULONG Version,HANDLE TarGzFileHandle,LPWSTR BasePath,REFGUID DistroId) {
    return This->lpVtbl->RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_RegisterDistributionPipe(ILxssUserSession1* This,LPWSTR DistributionName,ULONG Version,HANDLE TarGzFileHandle,LPWSTR BasePath,REFGUID DistroId) {
    return This->lpVtbl->RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_GetDistributionId(ILxssUserSession1* This,LPCWSTR DistroName,ULONG EnableEnumerate,REFGUID DistroId) {
    return This->lpVtbl->GetDistributionId(This,DistroName,EnableEnumerate,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_TerminateDistribution(ILxssUserSession1* This,REFGUID DistroId) {
    return This->lpVtbl->TerminateDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_UnregisterDistribution(ILxssUserSession1* This,REFGUID DistroId) {
    return This->lpVtbl->UnregisterDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_ConfigureDistribution(ILxssUserSession1* This,REFGUID DistroId,LPCSTR KernelCommandLine,ULONG DefaultUid,ULONG EnvironmentCount,LPCSTR *DefaultEnvironment,ULONG Flags) {
    return This->lpVtbl->ConfigureDistribution(This,DistroId,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags);
}
static FORCEINLINE HRESULT ILxssUserSession1_GetDistributionConfiguration(ILxssUserSession1* This,REFGUID DistroId,LPWSTR *DistributionName,ULONG *Version,LPWSTR *BasePath,LPSTR *KernelCommandLine,ULONG *DefaultUid,ULONG *EnvironmentCount,LPSTR **DefaultEnvironment,ULONG *Flags) {
    return This->lpVtbl->GetDistributionConfiguration(This,DistroId,DistributionName,Version,BasePath,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags);
}
static FORCEINLINE HRESULT ILxssUserSession1_GetDefaultDistribution(ILxssUserSession1* This,REFGUID DistroId) {
    return This->lpVtbl->GetDefaultDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_SetDefaultDistribution(ILxssUserSession1* This,REFGUID DistroId) {
    return This->lpVtbl->SetDefaultDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_EnumerateDistributions(ILxssUserSession1* This,BOOLEAN Flags,ULONG *DistroCount,GUID **DistroIdList) {
    return This->lpVtbl->EnumerateDistributions(This,Flags,DistroCount,DistroIdList);
}
static FORCEINLINE HRESULT ILxssUserSession1_CreateLxProcess(ILxssUserSession1* This,REFGUID DistroId,LPSTR CommandLine,ULONG ArgumentCount,LPSTR *Arguments,LPWSTR CurrentDirectory,LPWSTR SharedEnvironment,LPWSTR ProcessEnvironment,SIZE_T EnvironmentLength,LPWSTR LinuxUserName,USHORT WindowWidthX,USHORT WindowHeightY,ULONG ConsoleHandle,PLXSS_STD_HANDLES StdHandles,REFGUID InitiatedDistroId,REFGUID LxInstanceId,HANDLE *LxProcessHandle,HANDLE *ServerHandle,PVOID InputSocket,PVOID OutputSocket,PVOID ErrorSocket,PVOID ServerSocket) {
    return This->lpVtbl->CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket);
}
static FORCEINLINE HRESULT ILxssUserSession1_BeginUpgradeDistribution(ILxssUserSession1* This,REFGUID DistroId,ULONG *Version,LPWSTR *BasePath) {
    return This->lpVtbl->BeginUpgradeDistribution(This,DistroId,Version,BasePath);
}
static FORCEINLINE HRESULT ILxssUserSession1_FinishUpgradeDistribution(ILxssUserSession1* This,REFGUID DistroId,ULONG Version) {
    return This->lpVtbl->FinishUpgradeDistribution(This,DistroId,Version);
}
static FORCEINLINE HRESULT ILxssUserSession1_DisableVmMode(ILxssUserSession1* This,REFGUID DistroId) {
    return This->lpVtbl->DisableVmMode(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_EnableVmMode(ILxssUserSession1* This,REFGUID DistroId) {
    return This->lpVtbl->EnableVmMode(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession1_RegisterLxBusServer(ILxssUserSession1* This,REFGUID DistroId,LPSTR LxBusServerName,HANDLE *ServerHandle) {
    return This->lpVtbl->RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle);
}
static FORCEINLINE HRESULT ILxssUserSession1_ExportDistribution(ILxssUserSession1* This,REFGUID DistroId,HANDLE FileHandle) {
    return This->lpVtbl->ExportDistribution(This,DistroId,FileHandle);
}
static FORCEINLINE HRESULT ILxssUserSession1_ExportDistributionPipe(ILxssUserSession1* This,REFGUID DistroId,HANDLE FileHandle) {
    return This->lpVtbl->ExportDistributionPipe(This,DistroId,FileHandle);
}
#endif
#endif

#endif


#endif  /* __ILxssUserSession1_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ILxssUserSession2 interface
 */
#ifndef __ILxssUserSession2_INTERFACE_DEFINED__
#define __ILxssUserSession2_INTERFACE_DEFINED__

DEFINE_GUID(IID_ILxssUserSession2, 0x536a6bcf, 0xfe04, 0x41d9, 0xb9,0x78, 0xdc,0xac,0xa9,0xa9,0xb5,0xb9);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("536a6bcf-fe04-41d9-b978-dcaca9a9b5b9")
ILxssUserSession2 : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
        REFGUID DistroId,
        LXSS_INSTANCE_FLAGS InstanceFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterDistribution(
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterDistributionPipe(
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDistributionId(
        LPCWSTR DistroName,
        BOOL EnableEnumerate,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE TerminateDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE UnregisterDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE ConfigureDistribution(
        REFGUID DistroId,
        LPCSTR KernelCommandLine,
        ULONG DefaultUid,
        ULONG EnvironmentCount,
        LPCSTR *DefaultEnvironment,
        ULONG Flags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDistributionConfiguration(
        REFGUID DistroId,
        LPWSTR *DistributionName,
        ULONG *Version,
        LPWSTR *BasePath,
        LPSTR *KernelCommandLine,
        ULONG *DefaultUid,
        ULONG *EnvironmentCount,
        LPSTR **DefaultEnvironment,
        ULONG *Flags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDefaultDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetDefaultDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE EnumerateDistributions(
        ULONG *DistroCount,
        PLXSS_ENUMERATE_INFO *DistroInfo) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateLxProcess(
        REFGUID DistroId,
        LPSTR CommandLine,
        ULONG ArgumentCount,
        LPSTR *Arguments,
        LPWSTR CurrentDirectory,
        LPWSTR SharedEnvironment,
        LPWSTR ProcessEnvironment,
        SIZE_T EnvironmentLength,
        LPWSTR LinuxUserName,
        USHORT WindowWidthX,
        USHORT WindowHeightY,
        ULONG ConsoleHandle,
        PLXSS_STD_HANDLES StdHandles,
        REFGUID InitiatedDistroId,
        REFGUID LxInstanceId,
        HANDLE *LxProcessHandle,
        HANDLE *ServerHandle,
        SOCKET *InputSocket,
        SOCKET *OutputSocket,
        SOCKET *ErrorSocket,
        SOCKET *ServerSocket) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetVersion(
        REFGUID DistroId,
        ULONG Version,
        LPSTR *Result) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterLxBusServer(
        REFGUID DistroId,
        LPSTR LxBusServerName,
        HANDLE *ServerHandle) = 0;

    virtual HRESULT STDMETHODCALLTYPE ExportDistribution(
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result) = 0;

    virtual HRESULT STDMETHODCALLTYPE ExportDistributionPipe(
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result) = 0;

    virtual HRESULT STDMETHODCALLTYPE Shutdown(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ILxssUserSession2, 0x536a6bcf, 0xfe04, 0x41d9, 0xb9,0x78, 0xdc,0xac,0xa9,0xa9,0xb5,0xb9)
#endif
#else
typedef struct ILxssUserSession2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ILxssUserSession2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ILxssUserSession2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ILxssUserSession2 *This);

    /*** ILxssUserSession2 methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateInstance)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        LXSS_INSTANCE_FLAGS InstanceFlags);

    HRESULT (STDMETHODCALLTYPE *RegisterDistribution)(
        ILxssUserSession2 *This,
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *RegisterDistributionPipe)(
        ILxssUserSession2 *This,
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *GetDistributionId)(
        ILxssUserSession2 *This,
        LPCWSTR DistroName,
        BOOL EnableEnumerate,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *TerminateDistribution)(
        ILxssUserSession2 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *UnregisterDistribution)(
        ILxssUserSession2 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *ConfigureDistribution)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        LPCSTR KernelCommandLine,
        ULONG DefaultUid,
        ULONG EnvironmentCount,
        LPCSTR *DefaultEnvironment,
        ULONG Flags);

    HRESULT (STDMETHODCALLTYPE *GetDistributionConfiguration)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        LPWSTR *DistributionName,
        ULONG *Version,
        LPWSTR *BasePath,
        LPSTR *KernelCommandLine,
        ULONG *DefaultUid,
        ULONG *EnvironmentCount,
        LPSTR **DefaultEnvironment,
        ULONG *Flags);

    HRESULT (STDMETHODCALLTYPE *GetDefaultDistribution)(
        ILxssUserSession2 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *SetDefaultDistribution)(
        ILxssUserSession2 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *EnumerateDistributions)(
        ILxssUserSession2 *This,
        ULONG *DistroCount,
        PLXSS_ENUMERATE_INFO *DistroInfo);

    HRESULT (STDMETHODCALLTYPE *CreateLxProcess)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        LPSTR CommandLine,
        ULONG ArgumentCount,
        LPSTR *Arguments,
        LPWSTR CurrentDirectory,
        LPWSTR SharedEnvironment,
        LPWSTR ProcessEnvironment,
        SIZE_T EnvironmentLength,
        LPWSTR LinuxUserName,
        USHORT WindowWidthX,
        USHORT WindowHeightY,
        ULONG ConsoleHandle,
        PLXSS_STD_HANDLES StdHandles,
        REFGUID InitiatedDistroId,
        REFGUID LxInstanceId,
        HANDLE *LxProcessHandle,
        HANDLE *ServerHandle,
        SOCKET *InputSocket,
        SOCKET *OutputSocket,
        SOCKET *ErrorSocket,
        SOCKET *ServerSocket);

    HRESULT (STDMETHODCALLTYPE *SetVersion)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        ULONG Version,
        LPSTR *Result);

    HRESULT (STDMETHODCALLTYPE *RegisterLxBusServer)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        LPSTR LxBusServerName,
        HANDLE *ServerHandle);

    HRESULT (STDMETHODCALLTYPE *ExportDistribution)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result);

    HRESULT (STDMETHODCALLTYPE *ExportDistributionPipe)(
        ILxssUserSession2 *This,
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result);

    HRESULT (STDMETHODCALLTYPE *Shutdown)(
        ILxssUserSession2 *This);

    END_INTERFACE
} ILxssUserSession2Vtbl;

interface ILxssUserSession2 {
    CONST_VTBL ILxssUserSession2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ILxssUserSession2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ILxssUserSession2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ILxssUserSession2_Release(This) (This)->lpVtbl->Release(This)
/*** ILxssUserSession2 methods ***/
#define ILxssUserSession2_CreateInstance(This,DistroId,InstanceFlags) (This)->lpVtbl->CreateInstance(This,DistroId,InstanceFlags)
#define ILxssUserSession2_RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId) (This)->lpVtbl->RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId)
#define ILxssUserSession2_RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId) (This)->lpVtbl->RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId)
#define ILxssUserSession2_GetDistributionId(This,DistroName,EnableEnumerate,DistroId) (This)->lpVtbl->GetDistributionId(This,DistroName,EnableEnumerate,DistroId)
#define ILxssUserSession2_TerminateDistribution(This,DistroId) (This)->lpVtbl->TerminateDistribution(This,DistroId)
#define ILxssUserSession2_UnregisterDistribution(This,DistroId) (This)->lpVtbl->UnregisterDistribution(This,DistroId)
#define ILxssUserSession2_ConfigureDistribution(This,DistroId,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags) (This)->lpVtbl->ConfigureDistribution(This,DistroId,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags)
#define ILxssUserSession2_GetDistributionConfiguration(This,DistroId,DistributionName,Version,BasePath,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags) (This)->lpVtbl->GetDistributionConfiguration(This,DistroId,DistributionName,Version,BasePath,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags)
#define ILxssUserSession2_GetDefaultDistribution(This,DistroId) (This)->lpVtbl->GetDefaultDistribution(This,DistroId)
#define ILxssUserSession2_SetDefaultDistribution(This,DistroId) (This)->lpVtbl->SetDefaultDistribution(This,DistroId)
#define ILxssUserSession2_EnumerateDistributions(This,DistroCount,DistroInfo) (This)->lpVtbl->EnumerateDistributions(This,DistroCount,DistroInfo)
#define ILxssUserSession2_CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket) (This)->lpVtbl->CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket)
#define ILxssUserSession2_SetVersion(This,DistroId,Version,Result) (This)->lpVtbl->SetVersion(This,DistroId,Version,Result)
#define ILxssUserSession2_RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle) (This)->lpVtbl->RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle)
#define ILxssUserSession2_ExportDistribution(This,DistroId,FileHandle,Result) (This)->lpVtbl->ExportDistribution(This,DistroId,FileHandle,Result)
#define ILxssUserSession2_ExportDistributionPipe(This,DistroId,FileHandle,Result) (This)->lpVtbl->ExportDistributionPipe(This,DistroId,FileHandle,Result)
#define ILxssUserSession2_Shutdown(This) (This)->lpVtbl->Shutdown(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ILxssUserSession2_QueryInterface(ILxssUserSession2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ILxssUserSession2_AddRef(ILxssUserSession2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ILxssUserSession2_Release(ILxssUserSession2* This) {
    return This->lpVtbl->Release(This);
}
/*** ILxssUserSession2 methods ***/
static FORCEINLINE HRESULT ILxssUserSession2_CreateInstance(ILxssUserSession2* This,REFGUID DistroId,LXSS_INSTANCE_FLAGS InstanceFlags) {
    return This->lpVtbl->CreateInstance(This,DistroId,InstanceFlags);
}
static FORCEINLINE HRESULT ILxssUserSession2_RegisterDistribution(ILxssUserSession2* This,LPWSTR DistributionName,ULONG Version,HANDLE TarGzFileHandle,LPWSTR BasePath,REFGUID DistroId) {
    return This->lpVtbl->RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_RegisterDistributionPipe(ILxssUserSession2* This,LPWSTR DistributionName,ULONG Version,HANDLE TarGzFileHandle,LPWSTR BasePath,REFGUID DistroId) {
    return This->lpVtbl->RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_GetDistributionId(ILxssUserSession2* This,LPCWSTR DistroName,BOOL EnableEnumerate,REFGUID DistroId) {
    return This->lpVtbl->GetDistributionId(This,DistroName,EnableEnumerate,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_TerminateDistribution(ILxssUserSession2* This,REFGUID DistroId) {
    return This->lpVtbl->TerminateDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_UnregisterDistribution(ILxssUserSession2* This,REFGUID DistroId) {
    return This->lpVtbl->UnregisterDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_ConfigureDistribution(ILxssUserSession2* This,REFGUID DistroId,LPCSTR KernelCommandLine,ULONG DefaultUid,ULONG EnvironmentCount,LPCSTR *DefaultEnvironment,ULONG Flags) {
    return This->lpVtbl->ConfigureDistribution(This,DistroId,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags);
}
static FORCEINLINE HRESULT ILxssUserSession2_GetDistributionConfiguration(ILxssUserSession2* This,REFGUID DistroId,LPWSTR *DistributionName,ULONG *Version,LPWSTR *BasePath,LPSTR *KernelCommandLine,ULONG *DefaultUid,ULONG *EnvironmentCount,LPSTR **DefaultEnvironment,ULONG *Flags) {
    return This->lpVtbl->GetDistributionConfiguration(This,DistroId,DistributionName,Version,BasePath,KernelCommandLine,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags);
}
static FORCEINLINE HRESULT ILxssUserSession2_GetDefaultDistribution(ILxssUserSession2* This,REFGUID DistroId) {
    return This->lpVtbl->GetDefaultDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_SetDefaultDistribution(ILxssUserSession2* This,REFGUID DistroId) {
    return This->lpVtbl->SetDefaultDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession2_EnumerateDistributions(ILxssUserSession2* This,ULONG *DistroCount,PLXSS_ENUMERATE_INFO *DistroInfo) {
    return This->lpVtbl->EnumerateDistributions(This,DistroCount,DistroInfo);
}
static FORCEINLINE HRESULT ILxssUserSession2_CreateLxProcess(ILxssUserSession2* This,REFGUID DistroId,LPSTR CommandLine,ULONG ArgumentCount,LPSTR *Arguments,LPWSTR CurrentDirectory,LPWSTR SharedEnvironment,LPWSTR ProcessEnvironment,SIZE_T EnvironmentLength,LPWSTR LinuxUserName,USHORT WindowWidthX,USHORT WindowHeightY,ULONG ConsoleHandle,PLXSS_STD_HANDLES StdHandles,REFGUID InitiatedDistroId,REFGUID LxInstanceId,HANDLE *LxProcessHandle,HANDLE *ServerHandle,SOCKET *InputSocket,SOCKET *OutputSocket,SOCKET *ErrorSocket,SOCKET *ServerSocket) {
    return This->lpVtbl->CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket);
}
static FORCEINLINE HRESULT ILxssUserSession2_SetVersion(ILxssUserSession2* This,REFGUID DistroId,ULONG Version,LPSTR *Result) {
    return This->lpVtbl->SetVersion(This,DistroId,Version,Result);
}
static FORCEINLINE HRESULT ILxssUserSession2_RegisterLxBusServer(ILxssUserSession2* This,REFGUID DistroId,LPSTR LxBusServerName,HANDLE *ServerHandle) {
    return This->lpVtbl->RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle);
}
static FORCEINLINE HRESULT ILxssUserSession2_ExportDistribution(ILxssUserSession2* This,REFGUID DistroId,HANDLE FileHandle,LPSTR *Result) {
    return This->lpVtbl->ExportDistribution(This,DistroId,FileHandle,Result);
}
static FORCEINLINE HRESULT ILxssUserSession2_ExportDistributionPipe(ILxssUserSession2* This,REFGUID DistroId,HANDLE FileHandle,LPSTR *Result) {
    return This->lpVtbl->ExportDistributionPipe(This,DistroId,FileHandle,Result);
}
static FORCEINLINE HRESULT ILxssUserSession2_Shutdown(ILxssUserSession2* This) {
    return This->lpVtbl->Shutdown(This);
}
#endif
#endif

#endif


#endif  /* __ILxssUserSession2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ILxssUserSession3 interface
 */
#ifndef __ILxssUserSession3_INTERFACE_DEFINED__
#define __ILxssUserSession3_INTERFACE_DEFINED__

DEFINE_GUID(IID_ILxssUserSession3, 0x536a6bcf, 0xfe04, 0x41d9, 0xb9,0x78, 0xdc,0xac,0xa9,0xa9,0xb5,0xb9);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("536a6bcf-fe04-41d9-b978-dcaca9a9b5b9")
ILxssUserSession3 : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
        REFGUID DistroId,
        LXSS_INSTANCE_FLAGS InstanceFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterDistribution(
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterDistributionPipe(
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDistributionId(
        LPCWSTR DistroName,
        BOOL EnableEnumerate,
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE TerminateDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE UnregisterDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE ConfigureDistribution(
        REFGUID DistroId,
        ULONG DefaultUid,
        ULONG Flags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDistributionConfiguration(
        REFGUID DistroId,
        LPWSTR *DistributionName,
        ULONG *Version,
        ULONG *DefaultUid,
        ULONG *EnvironmentCount,
        LPSTR **DefaultEnvironment,
        ULONG *Flags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDefaultDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetDefaultDistribution(
        REFGUID DistroId) = 0;

    virtual HRESULT STDMETHODCALLTYPE EnumerateDistributions(
        ULONG *DistroCount,
        PLXSS_ENUMERATE_INFO *DistroInfo) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateLxProcess(
        REFGUID DistroId,
        LPSTR CommandLine,
        ULONG ArgumentCount,
        LPSTR *Arguments,
        LPWSTR CurrentDirectory,
        LPWSTR SharedEnvironment,
        LPWSTR ProcessEnvironment,
        SIZE_T EnvironmentLength,
        LPWSTR LinuxUserName,
        USHORT WindowWidthX,
        USHORT WindowHeightY,
        ULONG ConsoleHandle,
        PLXSS_STD_HANDLES StdHandles,
        LXSS_INSTANCE_FLAGS InstanceFlags,
        REFGUID InitiatedDistroId,
        REFGUID LxInstanceId,
        HANDLE *LxProcessHandle,
        HANDLE *ServerHandle,
        PVOID InputSocket,
        PVOID OutputSocket,
        PVOID ErrorSocket,
        PVOID ServerSocket) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetVersion(
        REFGUID DistroId,
        ULONG Version,
        LPSTR *Result) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterLxBusServer(
        REFGUID DistroId,
        LPSTR LxBusServerName,
        HANDLE *ServerHandle) = 0;

    virtual HRESULT STDMETHODCALLTYPE ExportDistribution(
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result) = 0;

    virtual HRESULT STDMETHODCALLTYPE ExportDistributionPipe(
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result) = 0;

    virtual HRESULT STDMETHODCALLTYPE AttachPassThroughDisk(
        LPWSTR DiskPath) = 0;

    virtual HRESULT STDMETHODCALLTYPE DetachPassThroughDisk(
        LPWSTR DiskPath,
        ULONG *MountReturn,
        ULONG *MountStaus) = 0;

    virtual HRESULT STDMETHODCALLTYPE MountDisk(
        LPWSTR a,
        ULONG b,
        LPWSTR c,
        LPWSTR d,
        ULONG *e,
        ULONG *f,
        LPWSTR *g) = 0;

    virtual HRESULT STDMETHODCALLTYPE Shutdown(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateVm(
        LPWSTR a,
        LPWSTR b,
        ULONG c,
        LPWSTR *d,
        REFGUID e) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ILxssUserSession3, 0x536a6bcf, 0xfe04, 0x41d9, 0xb9,0x78, 0xdc,0xac,0xa9,0xa9,0xb5,0xb9)
#endif
#else
typedef struct ILxssUserSession3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ILxssUserSession3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ILxssUserSession3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ILxssUserSession3 *This);

    /*** ILxssUserSession3 methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateInstance)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        LXSS_INSTANCE_FLAGS InstanceFlags);

    HRESULT (STDMETHODCALLTYPE *RegisterDistribution)(
        ILxssUserSession3 *This,
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *RegisterDistributionPipe)(
        ILxssUserSession3 *This,
        LPWSTR DistributionName,
        ULONG Version,
        HANDLE TarGzFileHandle,
        LPWSTR BasePath,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *GetDistributionId)(
        ILxssUserSession3 *This,
        LPCWSTR DistroName,
        BOOL EnableEnumerate,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *TerminateDistribution)(
        ILxssUserSession3 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *UnregisterDistribution)(
        ILxssUserSession3 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *ConfigureDistribution)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        ULONG DefaultUid,
        ULONG Flags);

    HRESULT (STDMETHODCALLTYPE *GetDistributionConfiguration)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        LPWSTR *DistributionName,
        ULONG *Version,
        ULONG *DefaultUid,
        ULONG *EnvironmentCount,
        LPSTR **DefaultEnvironment,
        ULONG *Flags);

    HRESULT (STDMETHODCALLTYPE *GetDefaultDistribution)(
        ILxssUserSession3 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *SetDefaultDistribution)(
        ILxssUserSession3 *This,
        REFGUID DistroId);

    HRESULT (STDMETHODCALLTYPE *EnumerateDistributions)(
        ILxssUserSession3 *This,
        ULONG *DistroCount,
        PLXSS_ENUMERATE_INFO *DistroInfo);

    HRESULT (STDMETHODCALLTYPE *CreateLxProcess)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        LPSTR CommandLine,
        ULONG ArgumentCount,
        LPSTR *Arguments,
        LPWSTR CurrentDirectory,
        LPWSTR SharedEnvironment,
        LPWSTR ProcessEnvironment,
        SIZE_T EnvironmentLength,
        LPWSTR LinuxUserName,
        USHORT WindowWidthX,
        USHORT WindowHeightY,
        ULONG ConsoleHandle,
        PLXSS_STD_HANDLES StdHandles,
        LXSS_INSTANCE_FLAGS InstanceFlags,
        REFGUID InitiatedDistroId,
        REFGUID LxInstanceId,
        HANDLE *LxProcessHandle,
        HANDLE *ServerHandle,
        PVOID InputSocket,
        PVOID OutputSocket,
        PVOID ErrorSocket,
        PVOID ServerSocket);

    HRESULT (STDMETHODCALLTYPE *SetVersion)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        ULONG Version,
        LPSTR *Result);

    HRESULT (STDMETHODCALLTYPE *RegisterLxBusServer)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        LPSTR LxBusServerName,
        HANDLE *ServerHandle);

    HRESULT (STDMETHODCALLTYPE *ExportDistribution)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result);

    HRESULT (STDMETHODCALLTYPE *ExportDistributionPipe)(
        ILxssUserSession3 *This,
        REFGUID DistroId,
        HANDLE FileHandle,
        LPSTR *Result);

    HRESULT (STDMETHODCALLTYPE *AttachPassThroughDisk)(
        ILxssUserSession3 *This,
        LPWSTR DiskPath);

    HRESULT (STDMETHODCALLTYPE *DetachPassThroughDisk)(
        ILxssUserSession3 *This,
        LPWSTR DiskPath,
        ULONG *MountReturn,
        ULONG *MountStaus);

    HRESULT (STDMETHODCALLTYPE *MountDisk)(
        ILxssUserSession3 *This,
        LPWSTR a,
        ULONG b,
        LPWSTR c,
        LPWSTR d,
        ULONG *e,
        ULONG *f,
        LPWSTR *g);

    HRESULT (STDMETHODCALLTYPE *Shutdown)(
        ILxssUserSession3 *This);

    HRESULT (STDMETHODCALLTYPE *CreateVm)(
        ILxssUserSession3 *This,
        LPWSTR a,
        LPWSTR b,
        ULONG c,
        LPWSTR *d,
        REFGUID e);

    END_INTERFACE
} ILxssUserSession3Vtbl;

interface ILxssUserSession3 {
    CONST_VTBL ILxssUserSession3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ILxssUserSession3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ILxssUserSession3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ILxssUserSession3_Release(This) (This)->lpVtbl->Release(This)
/*** ILxssUserSession3 methods ***/
#define ILxssUserSession3_CreateInstance(This,DistroId,InstanceFlags) (This)->lpVtbl->CreateInstance(This,DistroId,InstanceFlags)
#define ILxssUserSession3_RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId) (This)->lpVtbl->RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId)
#define ILxssUserSession3_RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId) (This)->lpVtbl->RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId)
#define ILxssUserSession3_GetDistributionId(This,DistroName,EnableEnumerate,DistroId) (This)->lpVtbl->GetDistributionId(This,DistroName,EnableEnumerate,DistroId)
#define ILxssUserSession3_TerminateDistribution(This,DistroId) (This)->lpVtbl->TerminateDistribution(This,DistroId)
#define ILxssUserSession3_UnregisterDistribution(This,DistroId) (This)->lpVtbl->UnregisterDistribution(This,DistroId)
#define ILxssUserSession3_ConfigureDistribution(This,DistroId,DefaultUid,Flags) (This)->lpVtbl->ConfigureDistribution(This,DistroId,DefaultUid,Flags)
#define ILxssUserSession3_GetDistributionConfiguration(This,DistroId,DistributionName,Version,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags) (This)->lpVtbl->GetDistributionConfiguration(This,DistroId,DistributionName,Version,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags)
#define ILxssUserSession3_GetDefaultDistribution(This,DistroId) (This)->lpVtbl->GetDefaultDistribution(This,DistroId)
#define ILxssUserSession3_SetDefaultDistribution(This,DistroId) (This)->lpVtbl->SetDefaultDistribution(This,DistroId)
#define ILxssUserSession3_EnumerateDistributions(This,DistroCount,DistroInfo) (This)->lpVtbl->EnumerateDistributions(This,DistroCount,DistroInfo)
#define ILxssUserSession3_CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InstanceFlags,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket) (This)->lpVtbl->CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InstanceFlags,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket)
#define ILxssUserSession3_SetVersion(This,DistroId,Version,Result) (This)->lpVtbl->SetVersion(This,DistroId,Version,Result)
#define ILxssUserSession3_RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle) (This)->lpVtbl->RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle)
#define ILxssUserSession3_ExportDistribution(This,DistroId,FileHandle,Result) (This)->lpVtbl->ExportDistribution(This,DistroId,FileHandle,Result)
#define ILxssUserSession3_ExportDistributionPipe(This,DistroId,FileHandle,Result) (This)->lpVtbl->ExportDistributionPipe(This,DistroId,FileHandle,Result)
#define ILxssUserSession3_AttachPassThroughDisk(This,DiskPath) (This)->lpVtbl->AttachPassThroughDisk(This,DiskPath)
#define ILxssUserSession3_DetachPassThroughDisk(This,DiskPath,MountReturn,MountStaus) (This)->lpVtbl->DetachPassThroughDisk(This,DiskPath,MountReturn,MountStaus)
#define ILxssUserSession3_MountDisk(This,a,b,c,d,e,f,g) (This)->lpVtbl->MountDisk(This,a,b,c,d,e,f,g)
#define ILxssUserSession3_Shutdown(This) (This)->lpVtbl->Shutdown(This)
#define ILxssUserSession3_CreateVm(This,a,b,c,d,e) (This)->lpVtbl->CreateVm(This,a,b,c,d,e)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ILxssUserSession3_QueryInterface(ILxssUserSession3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ILxssUserSession3_AddRef(ILxssUserSession3* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ILxssUserSession3_Release(ILxssUserSession3* This) {
    return This->lpVtbl->Release(This);
}
/*** ILxssUserSession3 methods ***/
static FORCEINLINE HRESULT ILxssUserSession3_CreateInstance(ILxssUserSession3* This,REFGUID DistroId,LXSS_INSTANCE_FLAGS InstanceFlags) {
    return This->lpVtbl->CreateInstance(This,DistroId,InstanceFlags);
}
static FORCEINLINE HRESULT ILxssUserSession3_RegisterDistribution(ILxssUserSession3* This,LPWSTR DistributionName,ULONG Version,HANDLE TarGzFileHandle,LPWSTR BasePath,REFGUID DistroId) {
    return This->lpVtbl->RegisterDistribution(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_RegisterDistributionPipe(ILxssUserSession3* This,LPWSTR DistributionName,ULONG Version,HANDLE TarGzFileHandle,LPWSTR BasePath,REFGUID DistroId) {
    return This->lpVtbl->RegisterDistributionPipe(This,DistributionName,Version,TarGzFileHandle,BasePath,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_GetDistributionId(ILxssUserSession3* This,LPCWSTR DistroName,BOOL EnableEnumerate,REFGUID DistroId) {
    return This->lpVtbl->GetDistributionId(This,DistroName,EnableEnumerate,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_TerminateDistribution(ILxssUserSession3* This,REFGUID DistroId) {
    return This->lpVtbl->TerminateDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_UnregisterDistribution(ILxssUserSession3* This,REFGUID DistroId) {
    return This->lpVtbl->UnregisterDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_ConfigureDistribution(ILxssUserSession3* This,REFGUID DistroId,ULONG DefaultUid,ULONG Flags) {
    return This->lpVtbl->ConfigureDistribution(This,DistroId,DefaultUid,Flags);
}
static FORCEINLINE HRESULT ILxssUserSession3_GetDistributionConfiguration(ILxssUserSession3* This,REFGUID DistroId,LPWSTR *DistributionName,ULONG *Version,ULONG *DefaultUid,ULONG *EnvironmentCount,LPSTR **DefaultEnvironment,ULONG *Flags) {
    return This->lpVtbl->GetDistributionConfiguration(This,DistroId,DistributionName,Version,DefaultUid,EnvironmentCount,DefaultEnvironment,Flags);
}
static FORCEINLINE HRESULT ILxssUserSession3_GetDefaultDistribution(ILxssUserSession3* This,REFGUID DistroId) {
    return This->lpVtbl->GetDefaultDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_SetDefaultDistribution(ILxssUserSession3* This,REFGUID DistroId) {
    return This->lpVtbl->SetDefaultDistribution(This,DistroId);
}
static FORCEINLINE HRESULT ILxssUserSession3_EnumerateDistributions(ILxssUserSession3* This,ULONG *DistroCount,PLXSS_ENUMERATE_INFO *DistroInfo) {
    return This->lpVtbl->EnumerateDistributions(This,DistroCount,DistroInfo);
}
static FORCEINLINE HRESULT ILxssUserSession3_CreateLxProcess(ILxssUserSession3* This,REFGUID DistroId,LPSTR CommandLine,ULONG ArgumentCount,LPSTR *Arguments,LPWSTR CurrentDirectory,LPWSTR SharedEnvironment,LPWSTR ProcessEnvironment,SIZE_T EnvironmentLength,LPWSTR LinuxUserName,USHORT WindowWidthX,USHORT WindowHeightY,ULONG ConsoleHandle,PLXSS_STD_HANDLES StdHandles,LXSS_INSTANCE_FLAGS InstanceFlags,REFGUID InitiatedDistroId,REFGUID LxInstanceId,HANDLE *LxProcessHandle,HANDLE *ServerHandle,PVOID InputSocket,PVOID OutputSocket,PVOID ErrorSocket,PVOID ServerSocket) {
    return This->lpVtbl->CreateLxProcess(This,DistroId,CommandLine,ArgumentCount,Arguments,CurrentDirectory,SharedEnvironment,ProcessEnvironment,EnvironmentLength,LinuxUserName,WindowWidthX,WindowHeightY,ConsoleHandle,StdHandles,InstanceFlags,InitiatedDistroId,LxInstanceId,LxProcessHandle,ServerHandle,InputSocket,OutputSocket,ErrorSocket,ServerSocket);
}
static FORCEINLINE HRESULT ILxssUserSession3_SetVersion(ILxssUserSession3* This,REFGUID DistroId,ULONG Version,LPSTR *Result) {
    return This->lpVtbl->SetVersion(This,DistroId,Version,Result);
}
static FORCEINLINE HRESULT ILxssUserSession3_RegisterLxBusServer(ILxssUserSession3* This,REFGUID DistroId,LPSTR LxBusServerName,HANDLE *ServerHandle) {
    return This->lpVtbl->RegisterLxBusServer(This,DistroId,LxBusServerName,ServerHandle);
}
static FORCEINLINE HRESULT ILxssUserSession3_ExportDistribution(ILxssUserSession3* This,REFGUID DistroId,HANDLE FileHandle,LPSTR *Result) {
    return This->lpVtbl->ExportDistribution(This,DistroId,FileHandle,Result);
}
static FORCEINLINE HRESULT ILxssUserSession3_ExportDistributionPipe(ILxssUserSession3* This,REFGUID DistroId,HANDLE FileHandle,LPSTR *Result) {
    return This->lpVtbl->ExportDistributionPipe(This,DistroId,FileHandle,Result);
}
static FORCEINLINE HRESULT ILxssUserSession3_AttachPassThroughDisk(ILxssUserSession3* This,LPWSTR DiskPath) {
    return This->lpVtbl->AttachPassThroughDisk(This,DiskPath);
}
static FORCEINLINE HRESULT ILxssUserSession3_DetachPassThroughDisk(ILxssUserSession3* This,LPWSTR DiskPath,ULONG *MountReturn,ULONG *MountStaus) {
    return This->lpVtbl->DetachPassThroughDisk(This,DiskPath,MountReturn,MountStaus);
}
static FORCEINLINE HRESULT ILxssUserSession3_MountDisk(ILxssUserSession3* This,LPWSTR a,ULONG b,LPWSTR c,LPWSTR d,ULONG *e,ULONG *f,LPWSTR *g) {
    return This->lpVtbl->MountDisk(This,a,b,c,d,e,f,g);
}
static FORCEINLINE HRESULT ILxssUserSession3_Shutdown(ILxssUserSession3* This) {
    return This->lpVtbl->Shutdown(This);
}
static FORCEINLINE HRESULT ILxssUserSession3_CreateVm(ILxssUserSession3* This,LPWSTR a,LPWSTR b,ULONG c,LPWSTR *d,REFGUID e) {
    return This->lpVtbl->CreateVm(This,a,b,c,d,e);
}
#endif
#endif

#endif


#endif  /* __ILxssUserSession3_INTERFACE_DEFINED__ */

/*****************************************************************************
 * LxssUserSession coclass
 */

DEFINE_GUID(CLSID_LxssUserSession, 0x4f476546, 0xb412, 0x4579, 0xb6,0x4c, 0x12,0x3d,0xf3,0x31,0xe3,0xd6);

#ifdef __cplusplus
class DECLSPEC_UUID("4f476546-b412-4579-b64c-123df331e3d6") LxssUserSession;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(LxssUserSession, 0x4f476546, 0xb412, 0x4579, 0xb6,0x4c, 0x12,0x3d,0xf3,0x31,0xe3,0xd6)
#endif
#endif

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __lxssusersession_h__ */
